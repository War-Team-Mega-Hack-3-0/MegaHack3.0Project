# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: megahack-server

plugins:
  - serverless-offline

custom: ${file(serverless-variables.yml)}

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  profile: ${opt:aws-profile, self:custom.profiles.${self:provider.stage}}
  vpc: ${self:custom.provider.vpc}
  iamRoleStatements: ${self:custom.provider.iamRoleStatements}
  environment:
    NODE_ENV: ${self:provider.stage}
    DB_URL: ${self:custom.docdb.db_url}
    ENCRYPT_KEY: ${self:custom.encryptKey}

package:
  exclude:
    - __tests__/**
    - .eslintrc.yml
    - .eslintignore
    - .prettierrc
    - jest-*

functions:
  vtex-orders:
    handler: src/handlers/vtex/orders.handler
  authorizer_lambda:
    handler: src/handlers/authorizer.handler
    environment: ${self:custom.jwt}
  signin:
    handler: src/handlers/signin.handler
    events:
      - http:
          path: '/profile/token'
          method: POST
          cors: true
  signup:
    handler: src/handlers/signup.handler
    events:
      - http:
          path: '/profile/signup'
          method: POST
          cors: true
  dashboard:
    handler: src/handlers/dashboard.handler
    events:
      - http:
          path: '/dashboard'
          method: 'GET'
          cors: true
          authorizer:
            name: 'authorizer_lambda'
            type: token
            identitySource: method.request.header.Authorization

resources:
  - ${file(resources/documentdb.yml)}
  - ${file(resources/cors-4xx-response.yml)}
